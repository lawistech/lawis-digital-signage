import{a as i}from"./chunk-WBRTOA2C.js";import{A as h,R as f,W as E,c as g,j as o,l as y,o as m}from"./chunk-URYE4ZYK.js";import{a as u,b as p,i as d}from"./chunk-ODN5LVDJ.js";var _=(()=>{class a{constructor(){this.TABLE_NAME="playlists"}getPlaylists(){return o(i.from(this.TABLE_NAME).select(`
          *,
          items:playlist_items(*)
        `).order("created_at",{ascending:!1})).pipe(m(({data:t,error:e})=>{if(e)throw e;return this.mapPlaylists(t||[])}),h(t=>(console.error("Error fetching playlists:",t),y(()=>t))))}getPlaylist(t){return o(i.from(this.TABLE_NAME).select(`
          *,
          items:playlist_items(*)
        `).eq("id",t).single()).pipe(m(({data:e,error:r})=>{if(r)throw r;return this.mapPlaylist(e)}),h(e=>(console.error("Error fetching playlist:",e),y(()=>e))))}getPlaylistsByArea(t){return o(i.from(this.TABLE_NAME).select(`
          *,
          items:playlist_items(*)
        `).eq("area_id",t).order("created_at",{ascending:!1})).pipe(m(({data:e,error:r})=>{if(r)throw r;return this.mapPlaylists(e||[])}),h(e=>(console.error("Error fetching playlists by area:",e),y(()=>e))))}createPlaylist(t){return d(this,null,function*(){try{let{data:e}=yield i.auth.getUser(),{data:r,error:s}=yield i.from(this.TABLE_NAME).insert([{name:t.name,description:t.description,settings:t.settings,status:"draft",duration:0,created_by:e.user?.id}]).select().single();if(s)throw s;return{id:r.id,name:r.name,description:r.description,duration:0,items:[],status:"draft",lastModified:r.updated_at,createdBy:r.created_by,settings:r.settings,tags:[]}}catch(e){throw console.error("Error creating playlist:",e),e}})}updatePlaylist(t,e){return d(this,null,function*(){try{let{data:r,error:s}=yield i.from(this.TABLE_NAME).update({name:e.name,description:e.description,status:e.status,settings:e.settings,duration:e.duration||0}).eq("id",t).select().single();if(s)throw s;if(e.items){let{error:P}=yield i.from("playlist_items").delete().eq("playlist_id",t);if(P)throw P;if(e.items.length>0){let w=e.items.map(l=>({playlist_id:t,type:l.type,name:l.name,duration:l.duration,content_url:l.content.url,thumbnail_url:l.content.thumbnail||null,transition:l.settings.transition,transition_duration:l.settings.transitionDuration,scaling:l.settings.scaling,muted:l.settings.muted,loop:l.settings.loop})),{error:b}=yield i.from("playlist_items").insert(w);if(b)throw b}}let{data:n,error:c}=yield i.from(this.TABLE_NAME).select(`
          *,
          items:playlist_items(*)
        `).eq("id",t).single();if(c)throw c;return this.mapPlaylist(n)}catch(r){throw console.error("Error updating playlist:",r),r}})}deletePlaylist(t){return d(this,null,function*(){let{error:e}=yield i.from(this.TABLE_NAME).delete().eq("id",t);if(e)throw e})}mapPlaylists(t){return t.map(e=>this.mapPlaylist(e))}mapPlaylist(t){return{id:t.id,name:t.name,description:t.description,duration:t.duration||0,items:(t.items||[]).map(e=>({id:e.id,type:e.type,name:e.name,duration:e.duration,content:{url:e.content_url,thumbnail:e.thumbnail_url},settings:{transition:e.transition,transitionDuration:e.transition_duration,scaling:e.scaling,muted:e.muted,loop:e.loop},schedule:null})),lastModified:t.updated_at,createdBy:t.created_by,status:t.status,tags:t.tags||[],settings:t.settings}}subscribeToPlaylistUpdates(t){i.channel("playlist_changes").on("postgres_changes",{event:"*",schema:"public",table:this.TABLE_NAME},e=>{t(this.mapPlaylist(e.new))}).subscribe()}static{this.\u0275fac=function(e){return new(e||a)}}static{this.\u0275prov=f({token:a,factory:a.\u0275fac,providedIn:"root"})}}return a})();var I=(()=>{class a{constructor(t){this.supabaseService=t}getPlaylists(t){return t?this.supabaseService.getPlaylistsByArea(t):this.supabaseService.getPlaylists()}getPlaylistsByArea(t){return this.supabaseService.getPlaylistsByArea(t)}getPlaylist(t){return this.supabaseService.getPlaylist(t)}createPlaylist(t){return o(this.supabaseService.createPlaylist(t))}updatePlaylist(t,e){return o(this.supabaseService.updatePlaylist(t,e))}deletePlaylist(t){return o(this.supabaseService.deletePlaylist(t))}subscribeToUpdates(t){this.supabaseService.subscribeToPlaylistUpdates(t)}updatePlaylistStatus(t,e){return this.updatePlaylist(t,{status:e})}getActivePlaylistsCount(){return new g(t=>{this.getPlaylists().subscribe({next:e=>{let r=e.filter(s=>s.status==="active").length;t.next(r),t.complete()},error:e=>t.error(e)})})}getTotalDuration(){return new g(t=>{this.getPlaylists().subscribe({next:e=>{let r=e.reduce((s,n)=>s+n.duration,0);t.next(r),t.complete()},error:e=>t.error(e)})})}addItemToPlaylist(t,e,r){let s=[...e.items||[],r];return this.updatePlaylist(t,p(u({},e),{items:s,duration:s.reduce((n,c)=>n+(c.duration||0),0)}))}updatePlaylistItems(t,e,r){return this.updatePlaylist(t,p(u({},e),{items:r,duration:r.reduce((s,n)=>s+(n.duration||0),0)}))}removeItemFromPlaylist(t,e,r){let s=e.items.filter(n=>n.id!==r);return this.updatePlaylist(t,p(u({},e),{items:s,duration:s.reduce((n,c)=>n+(c.duration||0),0)}))}handleError(t){throw console.error("Playlist service error:",t),t}static{this.\u0275fac=function(e){return new(e||a)(E(_))}}static{this.\u0275prov=f({token:a,factory:a.\u0275fac,providedIn:"root"})}}return a})();export{I as a};
